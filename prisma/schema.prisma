// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User {
  id              Int     @id @default(autoincrement())
  name String?
  address String @unique
  avatarPath String?
  collections Collections[]
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Collections {
  id Int @id @default(autoincrement())
  name String
  symbol String
  uri String
  description String?
  totalSupply Int?
  address String

  user User @relation(fields: [userId], references: [id])
  userId Int
  nft NFT[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Listing {
  id Int @id @default(autoincrement())
  tokenId Int
  name String
  collectionAddress String
  price Float?
  imageUrl String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model NFT {
  id Int @id @default(autoincrement())
  tokenId Int
  collection Collections @relation(fields: [collectionId], references: [id])
  collectionId Int
  supply Int?
  price Float?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model NFTOwners {
  id Int @id @default(autoincrement())
  ownerAddress String
  nftId Int
  ownerStatus Boolean

  updatedAt DateTime @updatedAt
}

model Transaction {
  id Int @id @default(autoincrement())
  collectionId Int
  nftI Int
  txHash String

  createdAt DateTime @default(now())
}
